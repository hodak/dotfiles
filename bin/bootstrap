#!/usr/bin/env bash
source ~/dotfiles/zsh/functions.zsh

set -e

# Ask for sudo access
sudo -v

DEFAULT_SHELL=`which zsh`
HOST_NAME="$USER.dev"
BONJOUR_NAME="$USER-mac"

CURRENT_SHELL="$(dscl . -read /Users/$USER UserShell | cut -d " " -f 2)"
if test "$CURRENT_SHELL" != $DEFAULT_SHELL; then
  echo "Changing default shell to $DEFAULT_SHELL..."
  sudo chsh -s "$DEFAULT_SHELL" "$USER"
fi

if test "$(sudo scutil --get ComputerName)" != "$HOST_NAME"; then
  echo "Setting computer name to $HOST_NAME..."
  sudo scutil --set ComputerName "$HOST_NAME"
  sudo scutil --set HostName "$HOST_NAME"
fi

if test "$(sudo scutil --get LocalHostName)" != "$BONJOUR_NAME"; then
  echo "Setting bonjour host name to $BONJOUR_NAME..."
  sudo scutil --set LocalHostName "$BONJOUR_NAME"
fi

# Homebrew
if !(which brew > /dev/null); then
  echo 'Installing brew...'
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

echo "Updating brew..."
brew update || true

echo "Running brew doctor..."
brew doctor || true

brew_install() {
  for app; do
    if !(brew list | grep $app > /dev/null); then
      echo "Installing: $app"
      brew install $app || true
    fi
  done
}

brew_install git-lfs git-crypt \
  memcached postgresql tmux utf8proc cmake vim the_silver_searcher python3 wget \
  diff-so-fancy reattach-to-user-namespace docker imagemagick ghostscript \
  coreutils automake autoconf libxslt fop openssl libyaml readline libxslt libtool unixodbc gpg wxmac \
  tree v8 ansible zsh-history-substring-search

ln -s -F ~/dotfiles/link-bins/git-pr /usr/local/bin/git-pr
ln -s -F ~/dotfiles/link-bins/erldec /usr/local/bin/erldec

asdf plugin-add erlang
asdf plugin-add elixir
asdf plugin-add nodejs
asdf plugin-add java

pip3 install cryptography

exit 0
